#//-----------------------------------------------------------------------------
#//	STDSHADER_DX9.VPC
#//
#//	Project Script
#//-----------------------------------------------------------------------------

cmake_minimum_required(VERSION 3.16)
project(stdshader_dx9)
set(SRCDIR "${CMAKE_SOURCE_DIR}")
set(CMAKE_MODULE_PATH ${SRCDIR}/cmake)
set(OUTBINNAME "stdshader_dx9")
set(OUTBINDIR ${SRCDIR}/../game/bin)
set(STDSHADERSDIR ${CMAKE_CURRENT_SOURCE_DIR})
set(NOSTINKYLINKIES "1")
include(${CMAKE_MODULE_PATH}/detect_platform.cmake)
include(${CMAKE_MODULE_PATH}/source_dll_base.cmake)

if( WINDOWS OR POSIX )
    include_directories(fxctmp9)
    include_directories(vshtmp9)
endif()
include_directories(../)
add_definitions(-DSTDSHADER_DX9_DLL_EXPORT -DFAST_MATERIALVAR_ACCESS)
if(LINUXALL)
    add_definitions(-fpermissive)
endif()

target_sources(${OUTBINNAME} PRIVATE "aftershock.cpp")
target_sources(${OUTBINNAME} PRIVATE "aftershock_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "AccumBuff4Sample.cpp")
target_sources(${OUTBINNAME} PRIVATE "accumbuff5sample.cpp")
target_sources(${OUTBINNAME} PRIVATE "BaseVSShader.cpp")
target_sources(${OUTBINNAME} PRIVATE "bik_dx90.cpp")
target_sources(${OUTBINNAME} PRIVATE "Bloom.cpp")
target_sources(${OUTBINNAME} PRIVATE "BlurFilterX.cpp")
target_sources(${OUTBINNAME} PRIVATE "BlurFilterY.cpp")
target_sources(${OUTBINNAME} PRIVATE "BufferClearObeyStencil_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "cable_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "cloak.cpp")
target_sources(${OUTBINNAME} PRIVATE "cloak_blended_pass_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "cloak_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "cloud_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "colorcorrection.cpp")
target_sources(${OUTBINNAME} PRIVATE "compositor.cpp")
target_sources(${OUTBINNAME} PRIVATE "core_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "color_projection.cpp")
target_sources(${OUTBINNAME} PRIVATE "debugmrttexture.cpp")
		#'debugmorphaccumulator_dx9.cpp")					[$WIN32]
target_sources(${OUTBINNAME} PRIVATE "DebugTextureView.cpp")
target_sources(${OUTBINNAME} PRIVATE "DecalBaseTimesLightmapAlphaBlendSelfIllum_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "DecalModulate_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "depthwrite.cpp")
target_sources(${OUTBINNAME} PRIVATE "Downsample.cpp")
target_sources(${OUTBINNAME} PRIVATE "downsample_nohdr.cpp")
target_sources(${OUTBINNAME} PRIVATE "Engine_Post_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "emissive_scroll_blended_pass_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "eye_refract.cpp")
target_sources(${OUTBINNAME} PRIVATE "eye_refract_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "eyes_dx8_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "eyes_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "eyeglint_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "filmdust_dx8_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "filmgrain_dx8_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "flesh_interior_blended_pass_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "floatcombine.cpp")
target_sources(${OUTBINNAME} PRIVATE "floatcombine_autoexpose.cpp")
target_sources(${OUTBINNAME} PRIVATE "floattoscreen.cpp")
target_sources(${OUTBINNAME} PRIVATE "floattoscreen_vanilla.cpp")
target_sources(${OUTBINNAME} PRIVATE "HDRCombineTo16Bit.cpp")
target_sources(${OUTBINNAME} PRIVATE "HDRSelectRange.cpp")
target_sources(${OUTBINNAME} PRIVATE "hsl_filmgrain_pass1.cpp")
target_sources(${OUTBINNAME} PRIVATE "hsl_filmgrain_pass2.cpp")
target_sources(${OUTBINNAME} PRIVATE "hsv.cpp")
target_sources(${OUTBINNAME} PRIVATE "introscreenspaceeffect.cpp")
target_sources(${OUTBINNAME} PRIVATE "lightmappedgeneric_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "lightmappedgeneric_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "lightmappedreflective.cpp")
target_sources(${OUTBINNAME} PRIVATE "modulate_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "MonitorScreen_dx9.cpp")
		#'morphaccumulate_dx9.cpp")					[$WIN32]
		#'morphweight_dx9.cpp")						[$WIN32]
target_sources(${OUTBINNAME} PRIVATE "motion_blur_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "occlusion_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "particlelitgeneric_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "particlelitgeneric_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "particlesphere_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "pbr_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "portal.cpp")
target_sources(${OUTBINNAME} PRIVATE "portalstaticoverlay.cpp")
target_sources(${OUTBINNAME} PRIVATE "portal_refract.cpp")
target_sources(${OUTBINNAME} PRIVATE "portal_refract_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "pyro_vision.cpp")
target_sources(${OUTBINNAME} PRIVATE "refract.cpp")
target_sources(${OUTBINNAME} PRIVATE "refract_dx9_helper.cpp")
		#'rendertargetblit_x360.cpp")					[$X360]
target_sources(${OUTBINNAME} PRIVATE "sample4x4.cpp")
target_sources(${OUTBINNAME} PRIVATE "sample4x4_blend.cpp")
target_sources(${OUTBINNAME} PRIVATE "screenspace_general.cpp")
target_sources(${OUTBINNAME} PRIVATE "sfm_blurfilterx.cpp")
target_sources(${OUTBINNAME} PRIVATE "sfm_blurfiltery.cpp")
target_sources(${OUTBINNAME} PRIVATE "sfm_downsample.cpp")
target_sources(${OUTBINNAME} PRIVATE "sfm_integercombine.cpp")
target_sources(${OUTBINNAME} PRIVATE "shadow.cpp")
target_sources(${OUTBINNAME} PRIVATE "shadowbuild_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "shadowmodel_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "shatteredglass.cpp")
target_sources(${OUTBINNAME} PRIVATE "showz.cpp")
target_sources(${OUTBINNAME} PRIVATE "skin_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "sky_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "sky_hdr_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "sprite_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "spritecard.cpp")
target_sources(${OUTBINNAME} PRIVATE "teeth.cpp")
target_sources(${OUTBINNAME} PRIVATE "TreeLeaf.cpp")
target_sources(${OUTBINNAME} PRIVATE "unlitgeneric_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "unlittwotexture_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "vertexlitgeneric_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "vertexlitgeneric_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "volume_clouds.cpp")
target_sources(${OUTBINNAME} PRIVATE "volume_clouds_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "vortwarp_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "vr_distort_hud.cpp")
target_sources(${OUTBINNAME} PRIVATE "vr_distort_texture.cpp")
target_sources(${OUTBINNAME} PRIVATE "warp.cpp")
target_sources(${OUTBINNAME} PRIVATE "water.cpp")
target_sources(${OUTBINNAME} PRIVATE "weapon_sheen_pass_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "windowimposter_dx90.cpp")
target_sources(${OUTBINNAME} PRIVATE "wireframe_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "worldtwotextureblend.cpp")
target_sources(${OUTBINNAME} PRIVATE "worldvertexalpha.cpp")
target_sources(${OUTBINNAME} PRIVATE "worldvertextransition.cpp")
target_sources(${OUTBINNAME} PRIVATE "worldvertextransition_dx8_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "writez_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "writestencil_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "eyeball.cpp")

#// careful linking
target_link_libraries(${OUTBINNAME} libtier0 shaderlib tier1 mathlib  )#libvstdlib)


#This is missing some of the shader-building code... See stdshader_dx9.vpc.
#Looks like they have some sort of perl converter for their shading language, haven't looked at it much.
